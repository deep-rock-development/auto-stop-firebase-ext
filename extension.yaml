# Learn detailed information about the fields of an extension.yaml file in the docs:
# https://firebase.google.com/docs/extensions/reference/extension-yaml

name: functions-auto-stop-billing
version: 1.0.4
specVersion: v1beta # Version of the Firebase Extensions specification

# Friendly display name for your extension (~3-5 words)
displayName: Auto Stop Services

# Brief description of the task your extension performs (~1 sentence)
description: >-
  Stops cost overruns by disabling Firebase services when a billing threshold has been reached.

author:
  authorName: Kurt Weston
  url: https://github.com/deep-rock-development

icon: icon.png
tags: [utilities, billing, budget, cost, stop, cease, disable, shutdown]

license: Apache-2.0 # https://spdx.org/licenses/

# Public URL for the source code of your extension.
sourceUrl: https://github.com/deep-rock-development/auto-stop-firebase-ext
releaseNotesUrl: https://github.com/deep-rock-development/auto-stop-firebase-ext/blob/main/CHANGELOG.md

# Specify whether a paid-tier billing plan is required to use your extension.
billingRequired: true

# In an `apis` field, list any Google APIs (like Cloud Translation, BigQuery, etc.)
# https://firebase.google.com/docs/extensions/reference/extension-yaml#apis-field
# Also see available roles at: https://firebase.google.com/docs/extensions/publishers/access 
apis:
  - apiName: cloudbilling.googleapis.com
    reason: Needed to manage budget and receive budget alerts.
  - apiName: pubsub.googleapis.com
    reason: Required for creating and managing pub/sub topics.
  - apiName: cloudfunctions.googleapis.com
    reason: Necessary to deploy and execute functions that respond to budget alerts.
  - apiName: billingbudgets.googleapis.com
    reason: Necessary to create and manage budgets.
  - apiName: serviceusage.googleapis.com
    reason: Necessary to disable services in response to budget alerts reached.

# In a `roles` field, list any IAM access roles required for your extension to operate.
roles:
  - role: pubsub.editor
    reason: Create the topic that receives the budget alerts
  - role: pubsub.publisher
    reason: Publish to the topics to trigger alerts
  - role: pubsub.subscriber
    reason: Subscribe to a topic to receive budget alerts

# In the `resources` field, list each of your extension's functions, including the trigger for each function.
resources:
  - name: onInstallExtension
    type: firebaseextensions.v1beta.function
    description: >-
      Creates the resources necessary for the extension to operate.
    properties:
      runtime: nodejs18
      location: ${LOCATION}
      taskQueueTrigger: {}
  - name: stopTriggered
    type: firebaseextensions.v1beta.function
    description: >-
      Stops services in response to a pub/sub message from a budget alert.
    properties:
      runtime: nodejs18
      location: ${LOCATION}
      eventTrigger:
        eventType: google.pubsub.topic.publish
        resource: projects/${PROJECT_ID}/topics/${TOPIC_NAME}

# In the `params` field, set up your extension's user-configured parameters.
params:
  - param: TOPIC_NAME
    label: Topic Name
    description: The name of the Pub/Sub topic to subscribe to for triggering the stopTriggered function.
    type: string
    default: ext-firebase-trigger-auto-stop
    required: true
  - param: BUDGET_STOP_THRESHOLD_PERCENT
    label: Budget Stop Threshold
    description: The percent threshold (between 0.0 and 1.0) of your budget that will trigger the shutdown notification. Defaults to 1.0 (100%).
    type: string
    default: 1.0
    required: true
  - param: DISABLE_BILLING
    label: Disable Billing (Strategy 1)
    description: "Strategy 1: Removes the billing account from the project, stopping services from accruing costs. If Yes is selected, when the budget threshold is reached the Billing Account is removed from the project. This is the recommended strategy."
    type: select
    options:
      - label: Yes
        value: true
      - label: No
        value: false
    default: true
    required: true
  - param: DISABLE_API_LIST
    label: APIs to Disable (Strategy 2)
    description: "Strategy 2: Select services to be disabled when the budget is reached. If services are selected, when a budget threshold is reached these will be deactivated. If none are selected this strategy is not used. Note that this strategy is only recommended for advanced users."
    type: multiSelect
    options:
      - label: Firebase Storage
        value: firebasestorage.googleapis.com
      - label: Cloud Functions (Firebase Functions)
        value: cloudfunctions.googleapis.com
      - label: Firestore
        value: firestore.googleapis.com
      - label: Firebase Hosting
        value: firebasehosting.googleapis.com
      - label: Firebase Realtime Database
        value: firebasedatabase.googleapis.com
      - label: Firebase ML
        value: firebaseml.googleapis.com
      - label: Firebase ML Kit
        value: mlkit.googleapis.com
      - label: Firebase Vertex AI
        value: firebasevertexai.googleapis.com
      - label: Firebase Cloud Messaging
        value: fcm.googleapis.com
      - label: Firebase Authentication
        value: identitytoolkit.googleapis.com
      - label: Firebase Extensions
        value: firebaseextensions.googleapis.com
      - label: Pub/Sub
        value: pubsub.googleapis.com
      - label: Compute
        value: compute.googleapis.com
      - label: Storage
        value: storage.googleapis.com
    required: false
  - param: LOCATION
    label: Cloud Functions Location
    description: The location where the Cloud Functions will be deployed.
    type: select
    required: true
    default: us-central1
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: London (europe-west2)
        value: europe-west2
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
      - label: SÃ£o Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Oregon (us-west1)
        value: us-west1
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1

lifecycleEvents:
  onInstall:
    function: onInstallExtension
    processingMessage: Creating extension resources
  onUpdate:
    function: onInstallExtension
    processingMessage: Update extension resources
